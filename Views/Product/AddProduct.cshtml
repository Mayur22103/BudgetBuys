@{
    Layout = null;  // You can use your layout if needed
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Add Product</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #4e73df; /* Main background color */
            color: #000; /* Default text color for better readability */
        }

        .card {
            background-color: #fff; /* Set card background to white */
            border-radius: 1rem; /* Keep the card rounded */
            color: #000; /* Text color for the card */
        }

        footer {
            background-color: #4e73df; /* Match the footer to the main background */
        }

        .dropdown-icon-wrapper {
            position: relative;
        }

        /* Position the icon inside the dropdown */
        .dropdown-icon {
            position: absolute;
            top: 50%;
            right: 15px;
            transform: translateY(-50%);
            pointer-events: none; /* Ensure the icon doesn't interfere with the dropdown click */
            font-size: 18px;
            color: #aaa; /* Adjust icon color as needed */
        }

        .form-label {
            color: #000; /* Ensure form label text is dark */
        }

        .form-control {
            border: 1px solid #ccc; /* Adjust border color if needed */
        }

            .form-control:focus {
                border-color: #4e73df; /* Change border color on focus */
                box-shadow: 0 0 5px rgba(78, 115, 223, 0.5); /* Add shadow on focus */
            }
    </style>
</head>
<body>
    <section class="vh-100 gradient-custom h-100 mt-5 mb-5">
        <div class="container h-100 d-flex flex-column">
            <div class="row d-flex justify-content-center align-items-center">
                <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                    <div class="card">
                        <div class="card-body p-5 text-center">

                            <h2 class="fw-bold mb-2 text-uppercase">Add Product</h2>
                            <p class="mb-5">Please fill in the details below.</p>

                            @if (ViewBag.ErrorMessage != null)
                            {
                                <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
                            }

                            @using (Html.BeginForm("AddProductData", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <!-- Category -->
                                <div class="form-outline mb-4 position-relative">
                                    @Html.DropDownList("category", new SelectList(ViewBag.Categories, "Value", "Text"), "Select Category", new { @class = "form-control form-control-lg", id = "categoryDropdown" })
                                </div>

                                <!-- Subcategory -->
                                <div class="form-outline mb-4 position-relative">
                                    <select id="subcategoryDropdown" class="form-control form-control-lg">
                                        <option value="">Select Subcategory</option>
                                    </select>
                                </div>

                                <!-- Product Photo -->
                                <div class="form-outline mb-4">
                                    @Html.Label("productPhoto", "Add Image Of Product", new { @class = "form-label" })
                                    <input type="file" name="productPhoto" class="form-control form-control-lg" required />
                                </div>

                                <!-- Product Condition (Deadstock or Minor Defect) -->
                                <div class="form-outline mb-4">
                                    <label class="form-label fw-bold">Product Condition</label>
                                    <div class="card p-3 border-0 shadow-sm" style="background-color: #f8f9fc; border-radius: 0.5rem;">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <!-- Deadstock Option -->
                                            <div class="form-check form-check-inline">
                                                <input type="radio" id="deadstock" name="productCondition" value="Deadstock" class="form-check-input" checked>
                                                <label for="deadstock" class="form-check-label">
                                                    <i class="fa fa-cube text-primary me-2"></i> Deadstock
                                                </label>
                                            </div>
                                            <!-- Minor Defect Option -->
                                            <div class="form-check form-check-inline">
                                                <input type="radio" id="minorDefect" name="productCondition" value="Minor Defect" class="form-check-input">
                                                <label for="minorDefect" class="form-check-label">
                                                    <i class="fa fa-exclamation-circle text-danger me-2"></i> Minor Defect
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <!-- Product Name -->
                                <div class="form-outline mb-4">
                                    @Html.TextBox("productName", null, new { @class = "form-control form-control-lg", placeholder = "Product Name" })
                                </div>

                                <!-- Description -->
                                <div class="form-outline mb-4">
                                    @Html.TextArea("description", null, new { @class = "form-control form-control-lg", placeholder = "Description", rows = 3 })
                                </div>

                                <!-- Quantity -->
                                <div class="form-outline mb-4">
                                    @Html.TextBox("quantity", null, new { @class = "form-control form-control-lg", placeholder = "Quantity", type = "number", min = "1" })
                                </div>

                                <!-- Price -->
                                <div class="form-outline mb-4">
                                    @Html.TextBox("price", null, new { @class = "form-control form-control-lg", placeholder = "Price", type = "number", step = "0.01", min = "0" })
                                </div>



                                <!-- Gender (optional) -->
                                <div class="form-outline mb-4 position-relative">
                                    <div class="dropdown-icon-wrapper">
                                        @Html.DropDownList("gender", new SelectList(ViewBag.Genders, "Value", "Text"), "Select Gender", new { @class = "form-control form-control-lg", @id = "genderDropdown", disabled = "disabled" })
                                        <i class="fa fa-chevron-down dropdown-icon"></i>
                                    </div>
                                </div>

                                <!-- Hidden field to take seller name from session -->
                                @Html.Hidden("sellerName", User.Identity.Name ?? string.Empty)

                                <button type="submit" class="btn btn-primary btn-lg px-5 mt-3">Add Product</button>
                            }

                            <p class="mt-3">
                                Want to go back? <a href="@Url.Action("MyProducts", "Product")" class="text-dark">Return to Product List</a>.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#categoryDropdown').on('change', function () {
                var selectedCategory = $(this).val();
                var genderDropdown = $('#genderDropdown');

                // Define categories that require gender
                var categoriesThatRequireGender = ['2', '4', '6'];

                if (categoriesThatRequireGender.includes(selectedCategory)) {
                    genderDropdown.prop('disabled', false); // Enable the Gender dropdown
                } else {
                    genderDropdown.prop('disabled', true); // Disable the Gender dropdown
                    genderDropdown.val(''); // Reset to "Select Gender"
                }

                // AJAX call to get subcategories based on selected category
                $.ajax({
                    url: '@Url.Action("GetSubcategories", "Product")',
                    type: 'GET',
                    data: { categoryId: selectedCategory },
                    success: function (data) {
                        var subcategoryDropdown = $('#subcategoryDropdown');
                        subcategoryDropdown.empty(); // Clear existing options

                        // Add a default option
                        subcategoryDropdown.append('<option value="">Select Subcategory</option>');

                        // Populate the subcategory dropdown
                        $.each(data, function (index, item) {
                            subcategoryDropdown.append('<option value="' + item.SubCategoryId + '">' + item.SubCategoryName + '</option>');
                        });
                    },
                    error: function () {
                        alert('Error retrieving subcategories. Please try again.');
                    }
                });
            });
        });
    </script>
</body>
</html>
