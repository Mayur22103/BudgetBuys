@model Project.Models.Order

@{
    ViewBag.Title = "Order Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Estimated delivery date calculation based on the order date
    DateTime? estimatedDeliveryDate = Model.OrderDate.HasValue
        ? Model.OrderDate.Value.AddDays(7)
        : (DateTime?)null;

    bool isDelivered = estimatedDeliveryDate.HasValue && DateTime.Now >= estimatedDeliveryDate.Value;
}

<!-- Container for the order details -->
<div class="container mt-5 mb-5">
    <h2 class="text-center mb-4 text-primary">Order Details</h2>

    <!-- Order Summary Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-info text-white">
            <h5 class="card-title m-0">Order Summary</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6 col-12 mb-3">
                    <p><strong>Order Date:</strong> @Model.OrderDate</p>
                </div>
                <div class="col-md-6 col-12 mb-3 text-end">
                    <p><strong>Total Amount:</strong> ₹@Model.TotalAmount</p>
                </div>
                <div class="col-md-6 col-12 mb-3">
                    <p><strong>Payment Method:</strong> @Model.PaymentMethod</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Order Status and Estimated Delivery Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-warning text-white">
            <h5 class="card-title m-0">Order Status</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Status Display -->
                <div class="col-md-6 col-12 mb-3">
                    @if (Model.Status == "Delivered")
                    {
                        <div class="alert alert-success mb-0">
                            <i class="fa fa-check-circle"></i> <strong>Status:</strong> Delivered
                        </div>
                    }
                    else if (Model.Status == "Canceled")
                    {
                        <div class="alert alert-danger mb-0">
                            <i class="fa fa-times-circle"></i> <strong>Status:</strong> Canceled
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning mb-0">
                            <i class="fa fa-hourglass-half"></i> <strong>Status:</strong> In Progress
                        </div>
                    }
                </div>

                <!-- Delivery Date Section, hidden if order is canceled -->
                @if (Model.Status != "Canceled")
                {
                    <div class="col-md-6 col-12 mb-3 text-end">
                        <p class="m-0"><strong>@(Model.Status == "Delivered" ? "Delivered on" : "Estimated Delivery Date:")</strong></p>
                        <p class="lead m-0">
                            <span class="text-primary">
                                @(Model.Status == "Delivered" ? Model.OrderDate.Value.AddDays(7).ToString("dd MMM yyyy") : estimatedDeliveryDate?.ToString("dd MMM yyyy"))
                            </span>
                        </p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Order Items Table -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-secondary text-white">
            <h5 class="card-title m-0">Order Items</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>Product Photo</th>
                            <th>Product Name</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderItems)
                        {
                            <tr>
                                <td>
                                    <img src="~/@item.Product.ProductPhoto" alt="Product Image" class="img-fluid rounded" style="width: 100px; height: 100px;" />
                                </td>
                                <td>@item.Product.ProductName</td>
                                <td>@item.Quantity</td>
                                <td>₹@item.UnitPrice</td>
                                <td>₹@(item.Quantity * item.UnitPrice)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Back Button -->
    <div class="text-center mt-4">
        <button class="btn btn-dark" onclick="window.history.back()">Back to My Orders</button>
    </div>
</div>

<!-- Additional Styling for a Sleek Design -->
<style>
    .container {
        max-width: 1200px;
    }

    .card {
        border-radius: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .card-header {
        border-radius: 15px 15px 0 0;
        padding: 15px;
    }

    .card-body {
        padding: 20px;
    }

    .table th, .table td {
        text-align: center;
    }

    .table th {
        background-color: #343a40;
        color: white;
    }

    .img-fluid {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

    .btn-dark {
        padding: 12px 25px;
        font-size: 16px;
    }

    h2 {
        font-weight: bold;
        color: #007bff;
    }

    h5 {
        font-weight: 600;
    }

    .alert {
        padding: 10px 15px;
        border-radius: 5px;
        font-size: 16px;
    }

    .text-primary {
        font-weight: bold;
        font-size: 1.3em;
    }

    .lead {
        font-size: 1.2em;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }
</style>
